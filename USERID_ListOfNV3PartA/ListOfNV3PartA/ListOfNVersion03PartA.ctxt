#BlueJ class context
comment0.target=ListOfNVersion03PartA
comment0.text=\r\n\ This\ class\ maintains\ an\ arbitrary\ length\ list\ of\ integers.\r\n\ \r\n\ In\ this\ version\:\r\n\ 1.\ The\ size\ of\ the\ list\ is\ *VARIABLE*\ after\ the\ object\ is\ created.\r\n\ 2.\ The\ code\ assumes\ there\ is\ at\ least\ one\ element\ in\ the\ list.\r\n\ \r\n\ This\ class\ introduces\ the\ use\ of\ structural\ recursion.\r\n\ \r\n\ @author\ Raymond\ Lister\ \r\n\ @version\ May\ 2016\r\n\ \r\n
comment1.params=num
comment1.target=ListOfNVersion03PartA(int)
comment1.text=\r\n\ @param\ \ num\ \ \ the\ value\ to\ be\ stored\ in\ this\ object\r\n
comment10.params=replaceThis\ withThis
comment10.target=int\ replaceAll(int,\ int)
comment10.text=\r\n\ @return\ \ \ \ \ the\ number\ of\ times\ the\ replacement\ was\ made\r\n\ \r\n\ @param\ \ replaceThis\ \ \ the\ element\ to\ be\ replaced\r\n\ @param\ \ withThis\ \ \ \ \ \ the\ replacement\r\n
comment11.params=findThis
comment11.target=ListOfNVersion03PartA\ findUnSorted(int)
comment11.text=\r\n\ @return\ a\ reference\ to\ the\ first\ object\ in\ the\ list\ that\ contains\ the\ parameter\ value,\ or\ null\ if\ it\ is\ not\ found\r\n\ \r\n\ @param\ \ findThis\ \ \ the\ value\ to\ be\ found\r\n
comment12.params=
comment12.target=ListOfNVersion03PartA\ minRef()
comment12.text=\r\n\ @return\ \ \ \ \ the\ reference\ to\ the\ object\ containing\ the\ smallest\ element\ in\ the\ list\r\n
comment13.params=newElement
comment13.target=void\ insertLast(int)
comment13.text=\r\n\ Inserts\ an\ element\ in\ the\ last\ position.\ The\ pre-existing\ elements\ in\ the\r\n\ list\ are\ unaffected.\r\n\ \r\n\ @param\ \ newElement\ \ \ the\ element\ to\ be\ inserted\r\n
comment14.params=newElement
comment14.target=void\ insertSorted(int)
comment14.text=\r\n\ Inserts\ an\ element\ into\ a\ sorted\ list.\ NOTE\:\ The\ pre-existing\ elements\ in\ the\r\n\ list\ are\ sorted\ and\ the\ list\ remains\ sorted\ (ascending\ order).\r\n\ \r\n\ @param\ \ newElement\ \ \ the\ element\ to\ be\ inserted\r\n
comment2.params=num
comment2.target=ListOfNVersion03PartA(int[])
comment2.text=\r\n\ @param\ \ num\ \ \ the\ multiple\ values\ to\ be\ stored\ in\ the\ list,\ in\ that\ order\r\n
comment3.params=
comment3.target=int\ getListSize()
comment3.text=\r\n\ @return\ \ \ \ \ the\ number\ of\ elements\ stored\ in\ this\ list\ \r\n
comment4.params=
comment4.target=int\ getLast()
comment4.text=\r\n\ @return\ \ \ \ \ the\ last\ element\ in\ the\ list\r\n
comment5.params=
comment5.target=void\ printNode()
comment5.text=\r\n\ prints\ this\ object\r\n
comment6.params=
comment6.target=void\ printListTail()
comment6.text=\r\n\ prints\ the\ tail\ of\ a\ list\r\n
comment7.params=
comment7.target=void\ printList()
comment7.text=\r\n\ prints\ the\ contents\ of\ the\ list,\ in\ order\ from\ first\ to\ last\r\n
comment8.params=
comment8.target=void\ printlnList()
comment8.text=\r\n\ This\ method\ is\ NOT\ examinable\ in\ this\ test.\r\n\ \r\n\ prints\ the\ contents\ of\ the\ list,\ in\ order\ from\ first\ to\ last,\ and\r\n\ then\ moves\ the\ cursor\ to\ the\ next\ line\r\n
comment9.params=element
comment9.target=int\ countElement(int)
comment9.text=\r\n\ @return\ \ \ \ \ the\ number\ of\ times\ the\ element\ occurs\ in\ the\ list\r\n\ \r\n\ @param\ \ element\ \ \ the\ element\ to\ be\ counted\r\n
numComments=15
